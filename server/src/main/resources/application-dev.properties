server.port=8080
server.servlet.context-path=/hello1
#server.tomcat.max-threads=800
#debug=true

spring.sleuth.sampler.refresh.enabled=true
spring.sleuth.sampler.rate=10
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web

#??????6000?????9000?????
eureka.client.service-url.defaultZone=http://localhost:9000/eureka/
spring.application.name=myeurekaclient



resilience4j.circuitbreaker.configs.default.ringBufferSizeInClosedState=5
resilience4j.circuitbreaker.configs.default.ringBufferSizeInHalfOpenState=2
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10000
resilience4j.circuitbreaker.configs.default.failureRateThreshold=60
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.configs.default.recordFailurePredicate=com.mygroup.myproject.exception.RecordFailurePredicate
#\u9ED1\u540D\u5355
resilience4j.circuitbreaker.configs.default.recordExceptions=com.mygroup.myproject.exception.BusinessBException,com.mygroup.myproject.exception.BusinessAException
#\u767D\u540D\u5355\u4F18\u5148\u7EA7\u9AD8\u4E8E\u9ED1\u540D\u5355\uFF0C\u767D\u540D\u5355\u6240\u8C13\u7684\u5FFD\u7565\uFF0C\u662F\u6307\u4E0D\u8BA1\u5165\u7F13\u51B2\u533A\u4E2D\uFF08\u5373\u4E0D\u7B97\u6210\u529F\u4E5F\u4E0D\u7B97\u5931\u8D25\uFF09\uFF0C\u6709\u964D\u7EA7\u65B9\u6CD5\u4F1A\u8C03\u7528\u964D\u7EA7\u65B9\u6CD5\uFF0C\u6CA1\u6709\u964D\u7EA7\u65B9\u6CD5\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u548C\u5176\u4ED6\u5F02\u5E38\u65E0\u5F02\u3002
resilience4j.circuitbreaker.configs.default.ignoreExceptions=com.mygroup.myproject.exception.BusinessAException

resilience4j.circuitbreaker.instances.backendA.baseConfig=default
resilience4j.circuitbreaker.instances.backendA.waitDurationInOpenState=5000
#20\u6539\u621080\u8BD5\u8BD5\u3002
resilience4j.circuitbreaker.instances.backendA.failureRateThreshold=20

resilience4j.circuitbreaker.instances.backendB.baseConfig=default

feign.circuitbreaker.enabled=true
#feign.client.config.default.connectTimeout=1000
#feign.client.config.default.readTimeout=1000

##bulkhead
##\u5141\u8BB8\u6700\u5927\u7684\u5E76\u53D1\u6570\u91CF
#resilience4j.bulkhead.backends.mybulkhead.max-concurrent-calls=1
##\u963B\u585E\u7EBF\u7A0B\u7684\u6700\u5927\u65F6\u95F4\u91CF
#resilience4j.bulkhead.backends.mybulkhead.max-wait-duration=5
#
##ratelimiter
##\u4E00\u4E2A\u9650\u5236\u5468\u671F\u5185\u53EF\u8BBF\u95EE\u6B21\u6570
#resilience4j.ratelimiter.limiters.myratelimiter.limit-for-period=3
##\u9650\u5236\u5468\u671F,\u6BCF\u4E2A\u5468\u671F\u4E4B\u540E\uFF0C\u901F\u7387\u9650\u5236\u5668\u5C06\u91CD\u7F6E\u56DElimitForPeriod\u503C
#resilience4j.ratelimiter.limiters.myratelimiter.limit-refresh-period=30000
##\u7EBF\u7A0B\u7B49\u5F85\u5141\u8BB8\u6267\u884C\u65F6\u95F4
#resilience4j.ratelimiter.limiters.myratelimiter.timeout-duration=1000
##\u5F00\u542F\u65F6\u95F4\u8BA2\u9605
#resilience4j.ratelimiter.limiters.myratelimiter.subscribe-for-events=true
##\u5F00\u542F\u76D1\u63A7\u76D1\u63A7
#resilience4j.ratelimiter.limiters.myratelimiter.register-health-indicator=true










#\u83B7\u53D6\u6216\u8BBE\u7F6E\u8BFB\u53D6\u64CD\u4F5C\u672A\u5B8C\u6210\u65F6\u53D1\u751F\u8D85\u65F6\u4E4B\u524D\u7684\u6BEB\u79D2\u6570\u3002
ribbon.ReadTimeout=6000
#\u5BA2\u6237\u7AEF\u7B49\u5F85\u4E0E\u670D\u52A1\u5668\u5EFA\u7ACB\u8FDE\u63A5\u7684\u65F6\u95F4\uFF08\u4EE5\u6BEB\u79D2\u8BA1\uFF09
ribbon.ConnectTimeout=6000
myeurekaclient.ribbon.ConnectTimeout=2000
myeurekaclient.ribbon.ReadTimeout=2000
#\u5728\u540C\u4E00\u53F0\u670D\u52A1\u5668\u4E0A\u91CD\u8BD5\u7684\u6700\u5927\u6B21\u6570
ribbon.MaxAutoRetries=1
# \u5BF9\u6240\u6709\u64CD\u4F5C\u8BF7\u6C42\u90FD\u8FDB\u884C\u91CD\u8BD5
ribbon.OkToRetryOnAllOperations=true
#\u8981\u91CD\u8BD5\u7684\u4E0B\u4E00\u4E2A\u670D\u52A1\u5668\u7684\u6700\u5927\u6570\u91CF
ribbon.MaxAutoRetriesNextServer=1
#myeurekaclient.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

moneyconfig.money=1000
moneyconfig.moneydes=aaa ${moneyconfig.money} des

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/testdb
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.transaction-isolation=TRANSACTION_REPEATABLE_READ
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

#logging.config=classpath:logback-spring.xml


#logging.level.org.springframework.data=trace
#logging.pattern.console=%d - %msg%n
#logging.file.path=/Users/wuxiaotian/spring.log
#logging.level.root=info

logging.level.com.mygroup.myproject.mapper=debug


#jackson
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.property-naming-strategy=LOWER_CASE
spring.jackson.time-zone=GMT+8

#????
#spring.redis.host=127.0.0.1
#spring.redis.port=8001
#spring.redis.password=123456
#spring.redis.database=0
#spring.redis.timeout=500

#lettuce?jedis??
#spring.redis.lettuce.pool.max-active=10
#spring.redis.lettuce.pool.max-wait=-1
#spring.redis.lettuce.pool.max-idle=10
#spring.redis.lettuce.pool.min-idle=0

#jedis
#spring.redis.jedis.pool.max-active=10
#spring.redis.jedis.pool.max-wait=-1
#spring.redis.jedis.pool.max-idle=10
#spring.redis.jedis.pool.min-idle=0



#redis??lettuce??
#spring.redis.cluster.nodes=127.0.0.1:8001,127.0.0.1:8002,127.0.0.1:8003,127.0.0.1:8004,127.0.0.1:8005,127.0.0.1:8006,127.0.0.1:8007,127.0.0.1:8008,127.0.0.1:8009
#spring.redis.password=123456
#spring.redis.lettuce.pool.max-active=10
#spring.redis.lettuce.pool.max-wait=-1
#spring.redis.lettuce.pool.max-idle=10
#spring.redis.lettuce.pool.min-idle=0
# ??????? ??8max-active
# ??????? ??8max-idle: 10
# ??????? ??0min-idle: 0
#redis????????????#secondaryRedis???????????-?
#spring.secondaryRedis.cluster.nodes=127.0.0.1:8001,127.0.0.1:8002,127.0.0.1:8003,127.0.0.1:8004,127.0.0.1:8005,127.0.0.1:8006,127.0.0.1:8007,127.0.0.1:8008,127.0.0.1:8009
#spring.secondaryRedis.password=123456

#redis??jedis??



#spring.cloud.stream.bindings.myexchanage.group=order
#spring.cloud.stream.bindings.myexchanage.content-type=application/json




#\u57FA\u7840\u914D\u7F6E
spring.rabbitmq.addresses=127.0.0.1:5672
spring.rabbitmq.username=root
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=15000

#\u6D88\u8D39\u8005
#\u548C\u4EE3\u7801\u91CC\u7684channel.basicAck(deliveryTag,false);//\u4E0D\u652F\u6301\u6279\u91CF\u63A5\u6536
#\u5982\u679C\u6D88\u8D39\u8005\u6D88\u8D39\u4E86\u6D88\u606F\uFF0C\u6D88\u8D39\u8005\u4E0D\u8FD4\u56DEACK\uFF0C\u6D88\u606F\u4ECD\u7136\u5728\u961F\u5217\u91CC\uFF0C\u53EF\u4EE5\u65E0\u9650\u6B21\u88AB\u6D88\u8D39\u3002
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=10
spring.rabbitmq.listener.simple.prefetch=1
#spring.rabbitmq.listener.simple.

#\u751F\u4EA7\u8005
spring.rabbitmq.publisher-confirm-type=correlated
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.template.mandatory=true
#spring.rabbitmq.template.mandatory\u5C5E\u6027\u7684\u4F18\u5148\u7EA7\u9AD8\u4E8Espring.rabbitmq.publisher-returns\u7684\u4F18\u5148\u7EA7
#spring.rabbitmq.template.mandatory\u5C5E\u6027\u53EF\u80FD\u4F1A\u8FD4\u56DE\u4E09\u79CD\u503Cnull\u3001false\u3001true,
#spring.rabbitmq.template.mandatory\u7ED3\u679C\u4E3Atrue\u3001false\u65F6\u4F1A\u5FFD\u7565\u6389spring.rabbitmq.publisher-returns\u5C5E\u6027\u7684\u503C
#spring.rabbitmq.template.mandatory\u7ED3\u679C\u4E3Anull\uFF08\u5373\u4E0D\u914D\u7F6E\uFF09\u65F6\u7ED3\u679C\u7531spring.rabbitmq.publisher-returns\u786E\u5B9A

# \u5F00\u542F\u91CD\u8BD5
spring.rabbitmq.listener.simple.retry.enabled=true
# \u91CD\u8BD5\u6B21\u6570,\u9ED8\u8BA4\u4E3A3\u6B21
spring.rabbitmq.listener.simple.retry.max-attempts=5

spring.cloud.config.fail-fast=true


spring.data.elasticsearch.repositories.enabled=true
#\u7528http\uFF0C\u4E0D\u8981\u7528https
spring.elasticsearch.uris=http://127.0.0.1:9200,http://127.0.0.1:9201,http://127.0.0.1:9202
spring.elasticsearch.socket-timeout=10s
#spring.elasticsearch.username=user
#spring.elasticsearch.password=secret



## base
#spring.rabbitmq.host: \u670D\u52A1Host
#spring.rabbitmq.port: \u670D\u52A1\u7AEF\u53E3
#spring.rabbitmq.username: \u767B\u9646\u7528\u6237\u540D
#spring.rabbitmq.password: \u767B\u9646\u5BC6\u7801
#spring.rabbitmq.virtual-host: \u8FDE\u63A5\u5230rabbitMQ\u7684vhost
#spring.rabbitmq.addresses: \u6307\u5B9Aclient\u8FDE\u63A5\u5230\u7684server\u7684\u5730\u5740\uFF0C\u591A\u4E2A\u4EE5\u9017\u53F7\u5206\u9694(\u4F18\u5148\u53D6addresses\uFF0C\u7136\u540E\u518D\u53D6host)
#spring.rabbitmq.requested-heartbeat: \u6307\u5B9A\u5FC3\u8DF3\u8D85\u65F6\uFF0C\u5355\u4F4D\u79D2\uFF0C0\u4E3A\u4E0D\u6307\u5B9A\uFF1B\u9ED8\u8BA460s
#spring.rabbitmq.publisher-confirms: \u662F\u5426\u542F\u7528\u3010\u53D1\u5E03\u786E\u8BA4\u3011
#spring.rabbitmq.publisher-returns: \u662F\u5426\u542F\u7528\u3010\u53D1\u5E03\u8FD4\u56DE\u3011
#spring.rabbitmq.connection-timeout: \u8FDE\u63A5\u8D85\u65F6\uFF0C\u5355\u4F4D\u6BEB\u79D2\uFF0C0\u8868\u793A\u65E0\u7A77\u5927\uFF0C\u4E0D\u8D85\u65F6
#spring.rabbitmq.parsed-addresses:
## ssl
#spring.rabbitmq.ssl.enabled: \u662F\u5426\u652F\u6301ssl
#spring.rabbitmq.ssl.key-store: \u6307\u5B9A\u6301\u6709SSL certificate\u7684key store\u7684\u8DEF\u5F84
#spring.rabbitmq.ssl.key-store-password: \u6307\u5B9A\u8BBF\u95EEkey store\u7684\u5BC6\u7801
#spring.rabbitmq.ssl.trust-store: \u6307\u5B9A\u6301\u6709SSL certificates\u7684Trust store
#spring.rabbitmq.ssl.trust-store-password: \u6307\u5B9A\u8BBF\u95EEtrust store\u7684\u5BC6\u7801
#spring.rabbitmq.ssl.algorithm: ssl\u4F7F\u7528\u7684\u7B97\u6CD5\uFF0C\u4F8B\u5982\uFF0CTLSv1.1
## cache
#spring.rabbitmq.cache.channel.size: \u7F13\u5B58\u4E2D\u4FDD\u6301\u7684channel\u6570\u91CF
#spring.rabbitmq.cache.channel.checkout-timeout: \u5F53\u7F13\u5B58\u6570\u91CF\u88AB\u8BBE\u7F6E\u65F6\uFF0C\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u4E00\u4E2Achannel\u7684\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2\uFF1B\u5982\u679C\u4E3A0\uFF0C\u5219\u603B\u662F\u521B\u5EFA\u4E00\u4E2A\u65B0channel
#spring.rabbitmq.cache.connection.size: \u7F13\u5B58\u7684\u8FDE\u63A5\u6570\uFF0C\u53EA\u6709\u662FCONNECTION\u6A21\u5F0F\u65F6\u751F\u6548
#spring.rabbitmq.cache.connection.mode: \u8FDE\u63A5\u5DE5\u5382\u7F13\u5B58\u6A21\u5F0F\uFF1ACHANNEL \u548C CONNECTION
## listener
#spring.rabbitmq.listener.simple.auto-startup: \u662F\u5426\u542F\u52A8\u65F6\u81EA\u52A8\u542F\u52A8\u5BB9\u5668
#spring.rabbitmq.listener.simple.acknowledge-mode: \u8868\u793A\u6D88\u606F\u786E\u8BA4\u65B9\u5F0F\uFF0C\u5176\u6709\u4E09\u79CD\u914D\u7F6E\u65B9\u5F0F\uFF0C\u5206\u522B\u662Fnone\u3001manual\u548Cauto\uFF1B\u9ED8\u8BA4auto
#spring.rabbitmq.listener.simple.concurrency: \u6700\u5C0F\u7684\u6D88\u8D39\u8005\u6570\u91CF
#spring.rabbitmq.listener.simple.max-concurrency: \u6700\u5927\u7684\u6D88\u8D39\u8005\u6570\u91CF
#spring.rabbitmq.listener.simple.prefetch: \u6307\u5B9A\u4E00\u4E2A\u8BF7\u6C42\u80FD\u5904\u7406\u591A\u5C11\u4E2A\u6D88\u606F\uFF0C\u5982\u679C\u6709\u4E8B\u52A1\u7684\u8BDD\uFF0C\u5FC5\u987B\u5927\u4E8E\u7B49\u4E8Etransaction\u6570\u91CF.
#spring.rabbitmq.listener.simple.transaction-size: \u6307\u5B9A\u4E00\u4E2A\u4E8B\u52A1\u5904\u7406\u7684\u6D88\u606F\u6570\u91CF\uFF0C\u6700\u597D\u662F\u5C0F\u4E8E\u7B49\u4E8Eprefetch\u7684\u6570\u91CF.
#spring.rabbitmq.listener.simple.default-requeue-rejected: \u51B3\u5B9A\u88AB\u62D2\u7EDD\u7684\u6D88\u606F\u662F\u5426\u91CD\u65B0\u5165\u961F\uFF1B\u9ED8\u8BA4\u662Ftrue\uFF08\u4E0E\u53C2\u6570acknowledge-mode\u6709\u5173\u7CFB\uFF09
#spring.rabbitmq.listener.simple.idle-event-interval: \u591A\u5C11\u957F\u65F6\u95F4\u53D1\u5E03\u7A7A\u95F2\u5BB9\u5668\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2
##
#spring.rabbitmq.listener.simple.retry.enabled: \u76D1\u542C\u91CD\u8BD5\u662F\u5426\u53EF\u7528
#spring.rabbitmq.listener.simple.retry.max-attempts: \u6700\u5927\u91CD\u8BD5\u6B21\u6570
#spring.rabbitmq.listener.simple.retry.initial-interval: \u7B2C\u4E00\u6B21\u548C\u7B2C\u4E8C\u6B21\u5C1D\u8BD5\u53D1\u5E03\u6216\u4F20\u9012\u6D88\u606F\u4E4B\u95F4\u7684\u95F4\u9694
#spring.rabbitmq.listener.simple.retry.multiplier: \u5E94\u7528\u4E8E\u4E0A\u4E00\u91CD\u8BD5\u95F4\u9694\u7684\u4E58\u6570
#spring.rabbitmq.listener.simple.retry.max-interval: \u6700\u5927\u91CD\u8BD5\u65F6\u95F4\u95F4\u9694
#spring.rabbitmq.listener.simple.retry.stateless: \u91CD\u8BD5\u662F\u6709\u72B6\u6001or\u65E0\u72B6\u6001
## template
#spring.rabbitmq.template.mandatory: \u542F\u7528\u5F3A\u5236\u4FE1\u606F\uFF1B\u9ED8\u8BA4false
#spring.rabbitmq.template.receive-timeout: receive() \u64CD\u4F5C\u7684\u8D85\u65F6\u65F6\u95F4
#spring.rabbitmq.template.reply-timeout: sendAndReceive() \u64CD\u4F5C\u7684\u8D85\u65F6\u65F6\u95F4
#spring.rabbitmq.template.retry.enabled: \u53D1\u9001\u91CD\u8BD5\u662F\u5426\u53EF\u7528
#spring.rabbitmq.template.retry.max-attempts: \u6700\u5927\u91CD\u8BD5\u6B21\u6570
#spring.rabbitmq.template.retry.initial-interval: \u7B2C\u4E00\u6B21\u548C\u7B2C\u4E8C\u6B21\u5C1D\u8BD5\u53D1\u5E03\u6216\u4F20\u9012\u6D88\u606F\u4E4B\u95F4\u7684\u95F4\u9694
#spring.rabbitmq.template.retry.multiplier: \u5E94\u7528\u4E8E\u4E0A\u4E00\u91CD\u8BD5\u95F4\u9694\u7684\u4E58\u6570
#spring.rabbitmq.template.retry.max-interval: \u6700\u5927\u91CD\u8BD5\u65F6\u95F4\u95F4\u9694


